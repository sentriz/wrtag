# path-format is rooted in your destination music dir. the template is fed with musicbrainz release data
# see go.senan.xyz/wrtag/musicbrainz for type definitions

#path-format /home/senan/downloads/musicbeets/albums/{{ artistNames .Release.Artists | sort | join "; " | safepath }}/({{ .Release.ReleaseGroup.FirstReleaseDate.Year }}) {{ .Release.Title | safepath }}/{{ pad0 2 .TrackNum }}.{{ flatTracks .Release.Media | len | pad0 2 }} {{ .Track.Title | safepath }}{{ .Ext }}

# search links are shortcuts on for the ui to help research data, and populate missing musicbrainz data. the template is fed with tag data
# see go.senan.xyz/tags/tagcommon for type definitions

#research-link kagi https://kagi.com/search?l=4&q={{ printf "%s %s" (or .AlbumArtist .Artist) .Album | urlquery }}
#research-link juno https://www.junodownload.com/search/?q%5Ball%5D%5B%5D={{ printf "%s %s" (or .AlbumArtist .Artist) .Album | urlquery }}
#research-link a-tisket https://atisket.pulsewidth.org.uk/
#research-link musicbrainz https://musicbrainz.org/taglookup?tag-lookup.artist={{ or .AlbumArtist .Artist | urlquery }}&tag-lookup.release={{ .Album | urlquery }}

# add notification uri that are triggered by various events
# see all available services here https://containrrr.dev/shoutrrr/v0.8/services/generic/
# possible events are complete, needs-input

#notification-uri complete,needs-input smtp://username:password@host:port/?from=from@example.com&to=recipient@example.com
#notification-uri complete             generic+https://my.subsonic.com/rest/startScan.view?c=wrtag&v=1.16&u=user&p=password

# set a list of files to keep when moving or copying

#keep-file origin.yaml
#keep-file log.cue
